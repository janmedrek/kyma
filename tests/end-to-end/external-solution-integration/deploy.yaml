apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: e2e
  namespace: production
  labels:
    app: e2e
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        app: e2e
    spec:
      containers:
      - name: e2e
        image: jmedrek/e2e:0.29
        imagePullPolicy: IfNotPresent
        args:
        - "/e2e"
        env:
        - name: KUBERNETES_SERVICE_HOST
          value: "kubernetes.default.svc.cluster.local"
        - name: KUBERNETES_SERVICE_PORT
          value: "443"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: e2e-role
  namespace: production
  labels:
    app: e2e
rules:
- apiGroups: ["*"]
  resources: ["services", "deployments", "pods"]
  verbs: ["create", "get", "delete", "list"]
- apiGroups: ["*"]
  resources: ["secrets"]
  verbs: ["create", "get", "update", "delete"]
- apiGroups: ["applicationconnector.kyma-project.io"]
  resources: ["applications", "applicationmappings", "eventactivations"]
  verbs: ["get", "update", "list", "create", "delete"]
- apiGroups: ["extensions"]
  resources: ["ingresses"]
  verbs: ["get", "update", "list", "create", "delete"]
- apiGroups: ["eventing.kyma-project.io"]
  resources: ["subscriptions"]
  verbs: ["create", "get", "update", "delete"]
- apiGroups: ["kubeless.io"]
  resources: ["functions"]
  verbs: ["create", "get", "update", "delete"]
- apiGroups: ["servicecatalog.k8s.io"]
  resources: ["serviceinstances", "servicebindings"]
  verbs: ["create", "get", "update", "delete"]
- apiGroups: ["servicecatalog.kyma-project.io"]
  resources: ["servicebindingusages"]
  verbs: ["create", "get", "update", "delete"]

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: e2e-rolebinding
  namespace: production
  labels:
    app: e2e
subjects:
- kind: User
  name: system:serviceaccount:production:default
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: e2e-role
  apiGroup: rbac.authorization.k8s.io